{
  "address": "0x5fABD425Bfb6e714f15f3589187E3e8e67471c13",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "estimateEthAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gas",
          "type": "uint256"
        }
      ],
      "name": "estimateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inputReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_outputReserve",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "tokenToEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9af35cd8e293e18495cbe64968d2f6cf8e95a346c2ec3c26aade56e1c65e92b2",
  "receipt": {
    "to": null,
    "from": "0x8b7dB7CE0ea9723199AF7fE19e326681Ab13A75D",
    "contractAddress": "0x5fABD425Bfb6e714f15f3589187E3e8e67471c13",
    "transactionIndex": 0,
    "gasUsed": "1547191",
    "logsBloom": "0x
    "blockHash": "0xcaa4a7cef980b6ec79a2e7ce74a5bf0eaa78b208005a3a843a9ea3b3d1f3cd88",
    "transactionHash": "0x9af35cd8e293e18495cbe64968d2f6cf8e95a346c2ec3c26aade56e1c65e92b2",
    "logs": [],
    "blockNumber": 12,
    "cumulativeGasUsed": "1547191",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9bDf2442D76B8704742cD7019b8018508793d683"
  ],
  "numDeployments": 1,
  "solcInputHash": "4dc0f489833405510ad5e2dd1449eea2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"estimateEthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gas\",\"type\":\"uint256\"}],\"name\":\"estimateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_outputReserve\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dex.sol\":\"DEX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/Dex.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n// SPDX-License-Identifier: MIT\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract DEX {\\n    IERC20 private token;\\n    uint256 public lockedLiquidity;\\n    mapping(address => uint256) public liquidity;\\n\\n    event Deposit(address indexed _from, uint256 _tokenValue, uint256 _ethValue);\\n    event Withdraw(address indexed _to, uint256 _tokenValue, uint256 _ethValue);\\n\\n    constructor(address _token) {\\n        token = IERC20(_token);\\n    }\\n\\n    function initialize(uint256 _tokenAmount) public payable returns (uint256) {\\n        require(lockedLiquidity == 0, \\\"DEX already initialized.\\\");\\n        require(token.balanceOf(msg.sender) >= _tokenAmount, \\\"Token balance not sufficient.\\\");\\n        require(\\n            token.allowance(msg.sender, address(this)) >= _tokenAmount,\\n            \\\"Token allowance not sufficient.\\\"\\n        );\\n        lockedLiquidity = address(this).balance;\\n        liquidity[msg.sender] = lockedLiquidity;\\n        require(\\n            token.transferFrom(msg.sender, address(this), _tokenAmount),\\n            \\\"Error transferring tokens\\\"\\n        );\\n        return lockedLiquidity;\\n    }\\n\\n    function price(\\n        uint256 _inputAmount,\\n        uint256 _inputReserve,\\n        uint256 _outputReserve\\n    ) public pure returns (uint256) {\\n        uint256 amountWithFee = _inputAmount * 997;\\n        uint256 numerator = amountWithFee * _outputReserve;\\n        uint256 denominator = _inputReserve * 1000 + amountWithFee;\\n        return numerator / denominator;\\n    }\\n\\n    function ethToToken() public payable returns (uint256) {\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 tokensBought = price(msg.value, address(this).balance - msg.value, tokenReserve);\\n        require(token.transfer(msg.sender, tokensBought), \\\"Error transferring the token.\\\");\\n        return tokensBought;\\n    }\\n\\n    function estimateTokenAmount(uint256 _eth, uint256 _gas) public view returns (uint256) {\\n        return price(_eth, address(this).balance - _eth - _gas, token.balanceOf(address(this)));\\n    }\\n\\n    function estimateEthAmount(uint256 _tokens) public view returns (uint256) {\\n        return price(_tokens, token.balanceOf(address(this)), address(this).balance);\\n    }\\n\\n    function tokenToEth(uint256 tokens) public returns (uint256) {\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 ethBought = price(tokens, tokenReserve, address(this).balance);\\n        (bool sent, ) = msg.sender.call{value: ethBought}(\\\"\\\");\\n        require(sent, \\\"Failed to send user eth.\\\");\\n        require(\\n            token.transferFrom(msg.sender, address(this), tokens),\\n            \\\"Error transferring the token.\\\"\\n        );\\n        return ethBought;\\n    }\\n\\n    function deposit() public payable returns (uint256) {\\n        uint256 ethReserve = address(this).balance - msg.value;\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 tokenAmount = ((msg.value * tokenReserve) / ethReserve) + 1;\\n        uint256 liquidityMinted = (msg.value * lockedLiquidity) / ethReserve;\\n        liquidity[msg.sender] += liquidityMinted;\\n        lockedLiquidity += liquidityMinted;\\n        require(\\n            token.transferFrom(msg.sender, address(this), tokenAmount),\\n            \\\"Error transeffing the token.\\\"\\n        );\\n        emit Deposit(msg.sender, tokenAmount, msg.value);\\n        return liquidityMinted;\\n    }\\n\\n    function withdraw(uint256 _liquidityAmount) public returns (uint256, uint256) {\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 ethAmount = (_liquidityAmount * address(this).balance) / lockedLiquidity;\\n        uint256 tokenAmount = (_liquidityAmount * tokenReserve) / lockedLiquidity;\\n        liquidity[msg.sender] -= _liquidityAmount;\\n        lockedLiquidity -= _liquidityAmount;\\n        (bool sent, ) = msg.sender.call{value: ethAmount}(\\\"\\\");\\n        require(sent, \\\"Failed to send user eth.\\\");\\n        require(token.transfer(msg.sender, tokenAmount), \\\"Error transferring the token\\\");\\n        emit Withdraw(msg.sender, tokenAmount, ethAmount);\\n        return (ethAmount, tokenAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x714ffb1eeca0f1f10907cf2844535b1126e68d05a7660979d3c034bc00fb93ef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001bc238038062001bc2833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b611aa3806200011f6000396000f3fe6080604052600436106100915760003560e01c8063b439824411610059578063b4398244146101a9578063b8c876b1146101d4578063d0e30db014610211578063f93dd63f1461022f578063fe4b84df1461026c57610091565b8063192e0161146100965780632071a9f4146100d35780632e1a7d4d1461011057806370b2a30f1461014e578063789770f41461018b575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906112d3565b61029c565b6040516100ca91906116c2565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190611361565b610358565b60405161010791906116c2565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906112d3565b6103b0565b6040516101459291906116dd565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906112d3565b610701565b60405161018291906116c2565b60405180910390f35b610193610963565b6040516101a091906116c2565b60405180910390f35b3480156101b557600080fd5b506101be610b1f565b6040516101cb91906116c2565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190611281565b610b25565b60405161020891906116c2565b60405180910390f35b610219610b3d565b60405161022691906116c2565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190611325565b610df7565b60405161026391906116c2565b60405180910390f35b610286600480360381019061028191906112d3565b610eca565b60405161029391906116c2565b60405180910390f35b60006103518260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102fb919061151e565b60206040518083038186803b15801561031357600080fd5b505afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b91906112fc565b47610358565b9050919050565b6000806103e58561036991906117a9565b90506000838261037991906117a9565b90506000826103e88761038c91906117a9565b6103969190611722565b905080826103a49190611778565b93505050509392505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040f919061151e565b60206040518083038186803b15801561042757600080fd5b505afa15801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f91906112fc565b90506000600154478661047291906117a9565b61047c9190611778565b90506000600154838761048f91906117a9565b6104999190611778565b905085600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ea9190611803565b9250508190555085600160008282546105039190611803565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168360405161053090611509565b60006040518083038185875af1925050503d806000811461056d576040519150601f19603f3d011682016040523d82523d6000602084013e610572565b606091505b50509050806105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90611662565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610611929190611599565b602060405180830381600087803b15801561062b57600080fd5b505af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066391906112aa565b6106a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610699906115c2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56883856040516106ea9291906116dd565b60405180910390a282829550955050505050915091565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161075d919061151e565b60206040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad91906112fc565b905060006107bc848347610358565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516107e490611509565b60006040518083038185875af1925050503d8060008114610821576040519150601f19603f3d011682016040523d82523d6000602084013e610826565b606091505b505090508061086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611662565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016108c793929190611562565b602060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091991906112aa565b610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90611622565b60405180910390fd5b819350505050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109bf919061151e565b60206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906112fc565b90506000610a29343447610a239190611803565b84610358565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a86929190611599565b602060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906112aa565b610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611622565b60405180910390fd5b809250505090565b60015481565b60026020528060005260406000206000915090505481565b6000803447610b4c9190611803565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610baa919061151e565b60206040518083038186803b158015610bc257600080fd5b505afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa91906112fc565b905060006001838334610c0d91906117a9565b610c179190611778565b610c219190611722565b905060008360015434610c3491906117a9565b610c3e9190611778565b905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8f9190611722565b925050819055508060016000828254610ca89190611722565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d0c93929190611562565b602060405180830381600087803b158015610d2657600080fd5b505af1158015610d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5e91906112aa565b610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611682565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158334604051610de59291906116dd565b60405180910390a28094505050505090565b6000610ec283838547610e0a9190611803565b610e149190611803565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e6d919061151e565b60206040518083038186803b158015610e8557600080fd5b505afa158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd91906112fc565b610358565b905092915050565b60008060015414610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f07906115e2565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f6a919061151e565b60206040518083038186803b158015610f8257600080fd5b505afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba91906112fc565b1015610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290611602565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611057929190611539565b60206040518083038186803b15801561106f57600080fd5b505afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a791906112fc565b10156110e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110df90611642565b60405180910390fd5b47600181905550600154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161119293929190611562565b602060405180830381600087803b1580156111ac57600080fd5b505af11580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e491906112aa565b611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121a906116a2565b60405180910390fd5b6001549050919050565b60008135905061123c81611a28565b92915050565b60008151905061125181611a3f565b92915050565b60008135905061126681611a56565b92915050565b60008151905061127b81611a56565b92915050565b60006020828403121561129357600080fd5b60006112a18482850161122d565b91505092915050565b6000602082840312156112bc57600080fd5b60006112ca84828501611242565b91505092915050565b6000602082840312156112e557600080fd5b60006112f384828501611257565b91505092915050565b60006020828403121561130e57600080fd5b600061131c8482850161126c565b91505092915050565b6000806040838503121561133857600080fd5b600061134685828601611257565b925050602061135785828601611257565b9150509250929050565b60008060006060848603121561137657600080fd5b600061138486828701611257565b935050602061139586828701611257565b92505060406113a686828701611257565b9150509250925092565b6113b981611837565b82525050565b60006113cc601c83611711565b91506113d7826118dd565b602082019050919050565b60006113ef601883611711565b91506113fa82611906565b602082019050919050565b6000611412601d83611711565b915061141d8261192f565b602082019050919050565b6000611435601d83611711565b915061144082611958565b602082019050919050565b6000611458601f83611711565b915061146382611981565b602082019050919050565b600061147b601883611711565b9150611486826119aa565b602082019050919050565b600061149e601c83611711565b91506114a9826119d3565b602082019050919050565b60006114c1600083611706565b91506114cc826119fc565b600082019050919050565b60006114e4601983611711565b91506114ef826119ff565b602082019050919050565b61150381611875565b82525050565b6000611514826114b4565b9150819050919050565b600060208201905061153360008301846113b0565b92915050565b600060408201905061154e60008301856113b0565b61155b60208301846113b0565b9392505050565b600060608201905061157760008301866113b0565b61158460208301856113b0565b61159160408301846114fa565b949350505050565b60006040820190506115ae60008301856113b0565b6115bb60208301846114fa565b9392505050565b600060208201905081810360008301526115db816113bf565b9050919050565b600060208201905081810360008301526115fb816113e2565b9050919050565b6000602082019050818103600083015261161b81611405565b9050919050565b6000602082019050818103600083015261163b81611428565b9050919050565b6000602082019050818103600083015261165b8161144b565b9050919050565b6000602082019050818103600083015261167b8161146e565b9050919050565b6000602082019050818103600083015261169b81611491565b9050919050565b600060208201905081810360008301526116bb816114d7565b9050919050565b60006020820190506116d760008301846114fa565b92915050565b60006040820190506116f260008301856114fa565b6116ff60208301846114fa565b9392505050565b600081905092915050565b600082825260208201905092915050565b600061172d82611875565b915061173883611875565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561176d5761176c61187f565b5b828201905092915050565b600061178382611875565b915061178e83611875565b92508261179e5761179d6118ae565b5b828204905092915050565b60006117b482611875565b91506117bf83611875565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117f8576117f761187f565b5b828202905092915050565b600061180e82611875565b915061181983611875565b92508282101561182c5761182b61187f565b5b828203905092915050565b600061184282611855565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e2e000000600082015250565b7f546f6b656e20616c6c6f77616e6365206e6f742073756666696369656e742e00600082015250565b7f4661696c656420746f2073656e642075736572206574682e0000000000000000600082015250565b7f4572726f72207472616e73656666696e672074686520746f6b656e2e00000000600082015250565b50565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b611a3181611837565b8114611a3c57600080fd5b50565b611a4881611849565b8114611a5357600080fd5b50565b611a5f81611875565b8114611a6a57600080fd5b5056fea26469706673582212204b94ce3d72fecc3b68174f0f1e023d3eed710af0d4c3a63b665d018aed515e5264736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063b439824411610059578063b4398244146101a9578063b8c876b1146101d4578063d0e30db014610211578063f93dd63f1461022f578063fe4b84df1461026c57610091565b8063192e0161146100965780632071a9f4146100d35780632e1a7d4d1461011057806370b2a30f1461014e578063789770f41461018b575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906112d3565b61029c565b6040516100ca91906116c2565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190611361565b610358565b60405161010791906116c2565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906112d3565b6103b0565b6040516101459291906116dd565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906112d3565b610701565b60405161018291906116c2565b60405180910390f35b610193610963565b6040516101a091906116c2565b60405180910390f35b3480156101b557600080fd5b506101be610b1f565b6040516101cb91906116c2565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f69190611281565b610b25565b60405161020891906116c2565b60405180910390f35b610219610b3d565b60405161022691906116c2565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190611325565b610df7565b60405161026391906116c2565b60405180910390f35b610286600480360381019061028191906112d3565b610eca565b60405161029391906116c2565b60405180910390f35b60006103518260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102fb919061151e565b60206040518083038186803b15801561031357600080fd5b505afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b91906112fc565b47610358565b9050919050565b6000806103e58561036991906117a9565b90506000838261037991906117a9565b90506000826103e88761038c91906117a9565b6103969190611722565b905080826103a49190611778565b93505050509392505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040f919061151e565b60206040518083038186803b15801561042757600080fd5b505afa15801561043b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045f91906112fc565b90506000600154478661047291906117a9565b61047c9190611778565b90506000600154838761048f91906117a9565b6104999190611778565b905085600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ea9190611803565b9250508190555085600160008282546105039190611803565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168360405161053090611509565b60006040518083038185875af1925050503d806000811461056d576040519150601f19603f3d011682016040523d82523d6000602084013e610572565b606091505b50509050806105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90611662565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610611929190611599565b602060405180830381600087803b15801561062b57600080fd5b505af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066391906112aa565b6106a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610699906115c2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56883856040516106ea9291906116dd565b60405180910390a282829550955050505050915091565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161075d919061151e565b60206040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad91906112fc565b905060006107bc848347610358565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516107e490611509565b60006040518083038185875af1925050503d8060008114610821576040519150601f19603f3d011682016040523d82523d6000602084013e610826565b606091505b505090508061086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611662565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016108c793929190611562565b602060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091991906112aa565b610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094f90611622565b60405180910390fd5b819350505050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109bf919061151e565b60206040518083038186803b1580156109d757600080fd5b505afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906112fc565b90506000610a29343447610a239190611803565b84610358565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a86929190611599565b602060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad891906112aa565b610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611622565b60405180910390fd5b809250505090565b60015481565b60026020528060005260406000206000915090505481565b6000803447610b4c9190611803565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610baa919061151e565b60206040518083038186803b158015610bc257600080fd5b505afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa91906112fc565b905060006001838334610c0d91906117a9565b610c179190611778565b610c219190611722565b905060008360015434610c3491906117a9565b610c3e9190611778565b905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8f9190611722565b925050819055508060016000828254610ca89190611722565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d0c93929190611562565b602060405180830381600087803b158015610d2657600080fd5b505af1158015610d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5e91906112aa565b610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611682565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158334604051610de59291906116dd565b60405180910390a28094505050505090565b6000610ec283838547610e0a9190611803565b610e149190611803565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e6d919061151e565b60206040518083038186803b158015610e8557600080fd5b505afa158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd91906112fc565b610358565b905092915050565b60008060015414610f10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f07906115e2565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f6a919061151e565b60206040518083038186803b158015610f8257600080fd5b505afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba91906112fc565b1015610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290611602565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611057929190611539565b60206040518083038186803b15801561106f57600080fd5b505afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a791906112fc565b10156110e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110df90611642565b60405180910390fd5b47600181905550600154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161119293929190611562565b602060405180830381600087803b1580156111ac57600080fd5b505af11580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e491906112aa565b611223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121a906116a2565b60405180910390fd5b6001549050919050565b60008135905061123c81611a28565b92915050565b60008151905061125181611a3f565b92915050565b60008135905061126681611a56565b92915050565b60008151905061127b81611a56565b92915050565b60006020828403121561129357600080fd5b60006112a18482850161122d565b91505092915050565b6000602082840312156112bc57600080fd5b60006112ca84828501611242565b91505092915050565b6000602082840312156112e557600080fd5b60006112f384828501611257565b91505092915050565b60006020828403121561130e57600080fd5b600061131c8482850161126c565b91505092915050565b6000806040838503121561133857600080fd5b600061134685828601611257565b925050602061135785828601611257565b9150509250929050565b60008060006060848603121561137657600080fd5b600061138486828701611257565b935050602061139586828701611257565b92505060406113a686828701611257565b9150509250925092565b6113b981611837565b82525050565b60006113cc601c83611711565b91506113d7826118dd565b602082019050919050565b60006113ef601883611711565b91506113fa82611906565b602082019050919050565b6000611412601d83611711565b915061141d8261192f565b602082019050919050565b6000611435601d83611711565b915061144082611958565b602082019050919050565b6000611458601f83611711565b915061146382611981565b602082019050919050565b600061147b601883611711565b9150611486826119aa565b602082019050919050565b600061149e601c83611711565b91506114a9826119d3565b602082019050919050565b60006114c1600083611706565b91506114cc826119fc565b600082019050919050565b60006114e4601983611711565b91506114ef826119ff565b602082019050919050565b61150381611875565b82525050565b6000611514826114b4565b9150819050919050565b600060208201905061153360008301846113b0565b92915050565b600060408201905061154e60008301856113b0565b61155b60208301846113b0565b9392505050565b600060608201905061157760008301866113b0565b61158460208301856113b0565b61159160408301846114fa565b949350505050565b60006040820190506115ae60008301856113b0565b6115bb60208301846114fa565b9392505050565b600060208201905081810360008301526115db816113bf565b9050919050565b600060208201905081810360008301526115fb816113e2565b9050919050565b6000602082019050818103600083015261161b81611405565b9050919050565b6000602082019050818103600083015261163b81611428565b9050919050565b6000602082019050818103600083015261165b8161144b565b9050919050565b6000602082019050818103600083015261167b8161146e565b9050919050565b6000602082019050818103600083015261169b81611491565b9050919050565b600060208201905081810360008301526116bb816114d7565b9050919050565b60006020820190506116d760008301846114fa565b92915050565b60006040820190506116f260008301856114fa565b6116ff60208301846114fa565b9392505050565b600081905092915050565b600082825260208201905092915050565b600061172d82611875565b915061173883611875565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561176d5761176c61187f565b5b828201905092915050565b600061178382611875565b915061178e83611875565b92508261179e5761179d6118ae565b5b828204905092915050565b60006117b482611875565b91506117bf83611875565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117f8576117f761187f565b5b828202905092915050565b600061180e82611875565b915061181983611875565b92508282101561182c5761182b61187f565b5b828203905092915050565b600061184282611855565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e2e000000600082015250565b7f546f6b656e20616c6c6f77616e6365206e6f742073756666696369656e742e00600082015250565b7f4661696c656420746f2073656e642075736572206574682e0000000000000000600082015250565b7f4572726f72207472616e73656666696e672074686520746f6b656e2e00000000600082015250565b50565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b611a3181611837565b8114611a3c57600080fd5b50565b611a4881611849565b8114611a5357600080fd5b50565b611a5f81611875565b8114611a6a57600080fd5b5056fea26469706673582212204b94ce3d72fecc3b68174f0f1e023d3eed710af0d4c3a63b665d018aed515e5264736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/Dex.sol:DEX",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 85,
        "contract": "contracts/Dex.sol:DEX",
        "label": "lockedLiquidity",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "contracts/Dex.sol:DEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}