{
  "address": "0x7515a2469207B87C90F86087DDb33e2AB92472fd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inputReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_outputReserve",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2fe31aee997bc1d6565c3d184c006d13d2d8a6020df64d40fca190da1f93d159",
  "receipt": {
    "to": null,
    "from": "0x8b7dB7CE0ea9723199AF7fE19e326681Ab13A75D",
    "contractAddress": "0x7515a2469207B87C90F86087DDb33e2AB92472fd",
    "transactionIndex": 0,
    "gasUsed": "1582330",
    "logsBloom": "0x
    "blockHash": "0x9e11bc3d20d6308436452cb6c6cc95bd23fb9c2769ed7295ec4e8e93e73b3a8a",
    "transactionHash": "0x2fe31aee997bc1d6565c3d184c006d13d2d8a6020df64d40fca190da1f93d159",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "1582330",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9bDf2442D76B8704742cD7019b8018508793d683",
    "0x4020D4F79C41429571D2f0859aC1454dB4Ada585"
  ],
  "numDeployments": 1,
  "solcInputHash": "67278df10478743fab35a78aa8ea1383",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_outputReserve\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoolDex.sol\":\"CoolDEX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/CoolDex.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract CoolDEX {\\n    IERC20 private token;\\n    IERC20 private uniToken;\\n    uint256 public lockedLiquidity;\\n    mapping(address => uint256) public liquidity;\\n\\n    event Deposit(address indexed _from, uint256 _tokenValue, uint256 _ethValue);\\n    event Withdraw(address indexed _to, uint256 _tokenValue, uint256 _ethValue);\\n\\n    constructor(address _token, address _uniToken) {\\n        token = IERC20(_token);\\n        uniToken = IERC20(_uniToken);\\n    }\\n\\n    function initialize(uint256 _tokenAmount) public payable returns (uint256) {\\n        require(lockedLiquidity == 0, \\\"DEX already initialized.\\\");\\n        require(token.balanceOf(msg.sender) >= _tokenAmount, \\\"Token balance not sufficient.\\\");\\n        require(token.balanceOf(msg.sender) >= _tokenAmount, \\\"UniToken balance not sufficient.\\\");\\n        require(\\n            token.allowance(msg.sender, address(this)) >= _tokenAmount,\\n            \\\"Token allowance too low.\\\"\\n        );\\n        require(\\n            uniToken.allowance(msg.sender, address(this)) >= _tokenAmount,\\n            \\\"UniToken allowance too low.\\\"\\n        );\\n        lockedLiquidity = _tokenAmount;\\n        liquidity[msg.sender] = lockedLiquidity;\\n        require(\\n            token.transferFrom(msg.sender, address(this), _tokenAmount),\\n            \\\"Error transferring tokens\\\"\\n        );\\n        require(\\n            uniToken.transferFrom(msg.sender, address(this), _tokenAmount),\\n            \\\"Error transferring tokens\\\"\\n        );\\n        return lockedLiquidity;\\n    }\\n\\n    function price(\\n        uint256 _inputAmount,\\n        uint256 _inputReserve,\\n        uint256 _outputReserve\\n    ) public pure returns (uint256) {\\n        uint256 amountWithFee = _inputAmount * 997;\\n        uint256 numerator = amountWithFee * _outputReserve;\\n        uint256 denominator = _inputReserve * 1000 + amountWithFee;\\n        return numerator / denominator;\\n    }\\n\\n    function swap(\\n        uint256 _tokenAmount,\\n        address _fromToken,\\n        address _toToken\\n    ) public returns (uint256) {\\n        IERC20 fromToken = IERC20(_fromToken);\\n        IERC20 toToken = IERC20(_toToken);\\n\\n        uint256 fromReserve = fromToken.balanceOf(address(this));\\n        uint256 toReserve = toToken.balanceOf(address(this));\\n\\n        uint256 tokensBought = price(_tokenAmount, toReserve - _tokenAmount, fromReserve);\\n        require(toToken.transfer(msg.sender, tokensBought), \\\"Error transferring the token\\\");\\n        require(\\n            fromToken.transferFrom(msg.sender, address(this), _tokenAmount),\\n            \\\"Error tranferring the token.\\\"\\n        );\\n\\n        return tokensBought;\\n    }\\n\\n    function deposit() public payable returns (uint256) {\\n        uint256 ethReserve = address(this).balance - msg.value;\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 tokenAmount = ((msg.value * tokenReserve) / ethReserve) + 1;\\n        uint256 liquidityMinted = (msg.value * lockedLiquidity) / ethReserve;\\n        liquidity[msg.sender] += liquidityMinted;\\n        lockedLiquidity += liquidityMinted;\\n        require(\\n            token.transferFrom(msg.sender, address(this), tokenAmount),\\n            \\\"Error transeffing the token.\\\"\\n        );\\n        emit Deposit(msg.sender, tokenAmount, msg.value);\\n        return liquidityMinted;\\n    }\\n\\n    function withdraw(uint256 _liquidityAmount) public returns (uint256, uint256) {\\n        uint256 tokenReserve = token.balanceOf(address(this));\\n        uint256 ethAmount = (_liquidityAmount * address(this).balance) / lockedLiquidity;\\n        uint256 tokenAmount = (_liquidityAmount * tokenReserve) / lockedLiquidity;\\n        liquidity[msg.sender] -= _liquidityAmount;\\n        lockedLiquidity -= _liquidityAmount;\\n        (bool sent, ) = msg.sender.call{value: ethAmount}(\\\"\\\");\\n        require(sent, \\\"Failed to send user eth.\\\");\\n        require(token.transfer(msg.sender, tokenAmount), \\\"Error transferring the token\\\");\\n        emit Withdraw(msg.sender, tokenAmount, ethAmount);\\n        return (ethAmount, tokenAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xcb70e5862f48aa460c3b8195cf68cec53ca4695072605bf790f56d8059dffbc4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c5038038062001c508339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b611ada80620001766000396000f3fe6080604052600436106100705760003560e01c8063b43982441161004e578063b43982441461012d578063b8c876b114610158578063d0e30db014610195578063fe4b84df146101b357610070565b80632071a9f4146100755780632b7f0923146100b25780632e1a7d4d146100ef575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906112c0565b6101e3565b6040516100a991906116a7565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190611271565b61023b565b6040516100e691906116a7565b60405180910390f35b3480156100fb57600080fd5b506101166004803603810190610111919061121f565b610523565b6040516101249291906116c2565b60405180910390f35b34801561013957600080fd5b50610142610874565b60405161014f91906116a7565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a91906111cd565b61087a565b60405161018c91906116a7565b60405180910390f35b61019d610892565b6040516101aa91906116a7565b60405180910390f35b6101cd60048036038101906101c8919061121f565b610b4c565b6040516101da91906116a7565b60405180910390f35b6000806103e5856101f4919061178e565b905060008382610204919061178e565b90506000826103e887610217919061178e565b6102219190611707565b9050808261022f919061175d565b93505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161028191906114c3565b60206040518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190611248565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030e91906114c3565b60206040518083038186803b15801561032657600080fd5b505afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190611248565b90506000610378898a8461037291906117e8565b856101e3565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103b592919061153e565b602060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906111f6565b610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90611587565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b815260040161048393929190611507565b602060405180830381600087803b15801561049d57600080fd5b505af11580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d591906111f6565b610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050b90611687565b60405180910390fd5b80955050505050509392505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058291906114c3565b60206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611248565b9050600060025447866105e5919061178e565b6105ef919061175d565b905060006002548387610602919061178e565b61060c919061175d565b905085600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065d91906117e8565b92505081905550856002600082825461067691906117e8565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516106a3906114ae565b60006040518083038185875af1925050503d80600081146106e0576040519150601f19603f3d011682016040523d82523d6000602084013e6106e5565b606091505b5050905080610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090611607565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161078492919061153e565b602060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d691906111f6565b610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90611587565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568838560405161085d9291906116c2565b60405180910390a282829550955050505050915091565b60025481565b60036020528060005260406000206000915090505481565b60008034476108a191906117e8565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ff91906114c3565b60206040518083038186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611248565b905060006001838334610962919061178e565b61096c919061175d565b6109769190611707565b905060008360025434610989919061178e565b610993919061175d565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e49190611707565b9250508190555080600260008282546109fd9190611707565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a6193929190611507565b602060405180830381600087803b158015610a7b57600080fd5b505af1158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab391906111f6565b610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611627565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158334604051610b3a9291906116c2565b60405180910390a28094505050505090565b60008060025414610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906115a7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610bec91906114c3565b60206040518083038186803b158015610c0457600080fd5b505afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611248565b1015610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c74906115c7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610cd791906114c3565b60206040518083038186803b158015610cef57600080fd5b505afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d279190611248565b1015610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f906115e7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610dc49291906114de565b60206040518083038186803b158015610ddc57600080fd5b505afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190611248565b1015610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611567565b60405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610eb39291906114de565b60206040518083038186803b158015610ecb57600080fd5b505afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f039190611248565b1015610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90611667565b60405180910390fd5b81600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610fee93929190611507565b602060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104091906111f6565b61107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690611647565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110de93929190611507565b602060405180830381600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113091906111f6565b61116f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116690611647565b60405180910390fd5b6002549050919050565b60008135905061118881611a5f565b92915050565b60008151905061119d81611a76565b92915050565b6000813590506111b281611a8d565b92915050565b6000815190506111c781611a8d565b92915050565b6000602082840312156111df57600080fd5b60006111ed84828501611179565b91505092915050565b60006020828403121561120857600080fd5b60006112168482850161118e565b91505092915050565b60006020828403121561123157600080fd5b600061123f848285016111a3565b91505092915050565b60006020828403121561125a57600080fd5b6000611268848285016111b8565b91505092915050565b60008060006060848603121561128657600080fd5b6000611294868287016111a3565b93505060206112a586828701611179565b92505060406112b686828701611179565b9150509250925092565b6000806000606084860312156112d557600080fd5b60006112e3868287016111a3565b93505060206112f4868287016111a3565b9250506040611305868287016111a3565b9150509250925092565b6113188161181c565b82525050565b600061132b6018836116f6565b9150611336826118c2565b602082019050919050565b600061134e601c836116f6565b9150611359826118eb565b602082019050919050565b60006113716018836116f6565b915061137c82611914565b602082019050919050565b6000611394601d836116f6565b915061139f8261193d565b602082019050919050565b60006113b76020836116f6565b91506113c282611966565b602082019050919050565b60006113da6018836116f6565b91506113e58261198f565b602082019050919050565b60006113fd601c836116f6565b9150611408826119b8565b602082019050919050565b60006114206000836116eb565b915061142b826119e1565b600082019050919050565b60006114436019836116f6565b915061144e826119e4565b602082019050919050565b6000611466601b836116f6565b915061147182611a0d565b602082019050919050565b6000611489601c836116f6565b915061149482611a36565b602082019050919050565b6114a88161185a565b82525050565b60006114b982611413565b9150819050919050565b60006020820190506114d8600083018461130f565b92915050565b60006040820190506114f3600083018561130f565b611500602083018461130f565b9392505050565b600060608201905061151c600083018661130f565b611529602083018561130f565b611536604083018461149f565b949350505050565b6000604082019050611553600083018561130f565b611560602083018461149f565b9392505050565b600060208201905081810360008301526115808161131e565b9050919050565b600060208201905081810360008301526115a081611341565b9050919050565b600060208201905081810360008301526115c081611364565b9050919050565b600060208201905081810360008301526115e081611387565b9050919050565b60006020820190508181036000830152611600816113aa565b9050919050565b60006020820190508181036000830152611620816113cd565b9050919050565b60006020820190508181036000830152611640816113f0565b9050919050565b6000602082019050818103600083015261166081611436565b9050919050565b6000602082019050818103600083015261168081611459565b9050919050565b600060208201905081810360008301526116a08161147c565b9050919050565b60006020820190506116bc600083018461149f565b92915050565b60006040820190506116d7600083018561149f565b6116e4602083018461149f565b9392505050565b600081905092915050565b600082825260208201905092915050565b60006117128261185a565b915061171d8361185a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561175257611751611864565b5b828201905092915050565b60006117688261185a565b91506117738361185a565b92508261178357611782611893565b5b828204905092915050565b60006117998261185a565b91506117a48361185a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117dd576117dc611864565b5b828202905092915050565b60006117f38261185a565b91506117fe8361185a565b92508282101561181157611810611864565b5b828203905092915050565b60006118278261183a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f556e69546f6b656e2062616c616e6365206e6f742073756666696369656e742e600082015250565b7f4661696c656420746f2073656e642075736572206574682e0000000000000000600082015250565b7f4572726f72207472616e73656666696e672074686520746f6b656e2e00000000600082015250565b50565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b7f556e69546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000600082015250565b7f4572726f72207472616e66657272696e672074686520746f6b656e2e00000000600082015250565b611a688161181c565b8114611a7357600080fd5b50565b611a7f8161182e565b8114611a8a57600080fd5b50565b611a968161185a565b8114611aa157600080fd5b5056fea264697066735822122037fbac1f5acfd227dda0f825124ba9590538e84620d3e7951af1eabf16e400db64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063b43982441161004e578063b43982441461012d578063b8c876b114610158578063d0e30db014610195578063fe4b84df146101b357610070565b80632071a9f4146100755780632b7f0923146100b25780632e1a7d4d146100ef575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906112c0565b6101e3565b6040516100a991906116a7565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190611271565b61023b565b6040516100e691906116a7565b60405180910390f35b3480156100fb57600080fd5b506101166004803603810190610111919061121f565b610523565b6040516101249291906116c2565b60405180910390f35b34801561013957600080fd5b50610142610874565b60405161014f91906116a7565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a91906111cd565b61087a565b60405161018c91906116a7565b60405180910390f35b61019d610892565b6040516101aa91906116a7565b60405180910390f35b6101cd60048036038101906101c8919061121f565b610b4c565b6040516101da91906116a7565b60405180910390f35b6000806103e5856101f4919061178e565b905060008382610204919061178e565b90506000826103e887610217919061178e565b6102219190611707565b9050808261022f919061175d565b93505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161028191906114c3565b60206040518083038186803b15801561029957600080fd5b505afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190611248565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030e91906114c3565b60206040518083038186803b15801561032657600080fd5b505afa15801561033a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035e9190611248565b90506000610378898a8461037291906117e8565b856101e3565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103b592919061153e565b602060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906111f6565b610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90611587565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b815260040161048393929190611507565b602060405180830381600087803b15801561049d57600080fd5b505af11580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d591906111f6565b610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050b90611687565b60405180910390fd5b80955050505050509392505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058291906114c3565b60206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611248565b9050600060025447866105e5919061178e565b6105ef919061175d565b905060006002548387610602919061178e565b61060c919061175d565b905085600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461065d91906117e8565b92505081905550856002600082825461067691906117e8565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516106a3906114ae565b60006040518083038185875af1925050503d80600081146106e0576040519150601f19603f3d011682016040523d82523d6000602084013e6106e5565b606091505b5050905080610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090611607565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161078492919061153e565b602060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d691906111f6565b610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90611587565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568838560405161085d9291906116c2565b60405180910390a282829550955050505050915091565b60025481565b60036020528060005260406000206000915090505481565b60008034476108a191906117e8565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ff91906114c3565b60206040518083038186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611248565b905060006001838334610962919061178e565b61096c919061175d565b6109769190611707565b905060008360025434610989919061178e565b610993919061175d565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e49190611707565b9250508190555080600260008282546109fd9190611707565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a6193929190611507565b602060405180830381600087803b158015610a7b57600080fd5b505af1158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab391906111f6565b610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611627565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158334604051610b3a9291906116c2565b60405180910390a28094505050505090565b60008060025414610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906115a7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610bec91906114c3565b60206040518083038186803b158015610c0457600080fd5b505afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611248565b1015610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c74906115c7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610cd791906114c3565b60206040518083038186803b158015610cef57600080fd5b505afa158015610d03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d279190611248565b1015610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f906115e7565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610dc49291906114de565b60206040518083038186803b158015610ddc57600080fd5b505afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190611248565b1015610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611567565b60405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610eb39291906114de565b60206040518083038186803b158015610ecb57600080fd5b505afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f039190611248565b1015610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90611667565b60405180910390fd5b81600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610fee93929190611507565b602060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104091906111f6565b61107f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107690611647565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110de93929190611507565b602060405180830381600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113091906111f6565b61116f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116690611647565b60405180910390fd5b6002549050919050565b60008135905061118881611a5f565b92915050565b60008151905061119d81611a76565b92915050565b6000813590506111b281611a8d565b92915050565b6000815190506111c781611a8d565b92915050565b6000602082840312156111df57600080fd5b60006111ed84828501611179565b91505092915050565b60006020828403121561120857600080fd5b60006112168482850161118e565b91505092915050565b60006020828403121561123157600080fd5b600061123f848285016111a3565b91505092915050565b60006020828403121561125a57600080fd5b6000611268848285016111b8565b91505092915050565b60008060006060848603121561128657600080fd5b6000611294868287016111a3565b93505060206112a586828701611179565b92505060406112b686828701611179565b9150509250925092565b6000806000606084860312156112d557600080fd5b60006112e3868287016111a3565b93505060206112f4868287016111a3565b9250506040611305868287016111a3565b9150509250925092565b6113188161181c565b82525050565b600061132b6018836116f6565b9150611336826118c2565b602082019050919050565b600061134e601c836116f6565b9150611359826118eb565b602082019050919050565b60006113716018836116f6565b915061137c82611914565b602082019050919050565b6000611394601d836116f6565b915061139f8261193d565b602082019050919050565b60006113b76020836116f6565b91506113c282611966565b602082019050919050565b60006113da6018836116f6565b91506113e58261198f565b602082019050919050565b60006113fd601c836116f6565b9150611408826119b8565b602082019050919050565b60006114206000836116eb565b915061142b826119e1565b600082019050919050565b60006114436019836116f6565b915061144e826119e4565b602082019050919050565b6000611466601b836116f6565b915061147182611a0d565b602082019050919050565b6000611489601c836116f6565b915061149482611a36565b602082019050919050565b6114a88161185a565b82525050565b60006114b982611413565b9150819050919050565b60006020820190506114d8600083018461130f565b92915050565b60006040820190506114f3600083018561130f565b611500602083018461130f565b9392505050565b600060608201905061151c600083018661130f565b611529602083018561130f565b611536604083018461149f565b949350505050565b6000604082019050611553600083018561130f565b611560602083018461149f565b9392505050565b600060208201905081810360008301526115808161131e565b9050919050565b600060208201905081810360008301526115a081611341565b9050919050565b600060208201905081810360008301526115c081611364565b9050919050565b600060208201905081810360008301526115e081611387565b9050919050565b60006020820190508181036000830152611600816113aa565b9050919050565b60006020820190508181036000830152611620816113cd565b9050919050565b60006020820190508181036000830152611640816113f0565b9050919050565b6000602082019050818103600083015261166081611436565b9050919050565b6000602082019050818103600083015261168081611459565b9050919050565b600060208201905081810360008301526116a08161147c565b9050919050565b60006020820190506116bc600083018461149f565b92915050565b60006040820190506116d7600083018561149f565b6116e4602083018461149f565b9392505050565b600081905092915050565b600082825260208201905092915050565b60006117128261185a565b915061171d8361185a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561175257611751611864565b5b828201905092915050565b60006117688261185a565b91506117738361185a565b92508261178357611782611893565b5b828204905092915050565b60006117998261185a565b91506117a48361185a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117dd576117dc611864565b5b828202905092915050565b60006117f38261185a565b91506117fe8361185a565b92508282101561181157611810611864565b5b828203905092915050565b60006118278261183a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f556e69546f6b656e2062616c616e6365206e6f742073756666696369656e742e600082015250565b7f4661696c656420746f2073656e642075736572206574682e0000000000000000600082015250565b7f4572726f72207472616e73656666696e672074686520746f6b656e2e00000000600082015250565b50565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b7f556e69546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000600082015250565b7f4572726f72207472616e66657272696e672074686520746f6b656e2e00000000600082015250565b611a688161181c565b8114611a7357600080fd5b50565b611a7f8161182e565b8114611a8a57600080fd5b50565b611a968161185a565b8114611aa157600080fd5b5056fea264697066735822122037fbac1f5acfd227dda0f825124ba9590538e84620d3e7951af1eabf16e400db64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 83,
        "contract": "contracts/CoolDex.sol:CoolDEX",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 86,
        "contract": "contracts/CoolDex.sol:CoolDEX",
        "label": "uniToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 88,
        "contract": "contracts/CoolDex.sol:CoolDEX",
        "label": "lockedLiquidity",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 92,
        "contract": "contracts/CoolDex.sol:CoolDEX",
        "label": "liquidity",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}