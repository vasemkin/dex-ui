/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DEX, DEXInterface } from "../DEX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
    ],
    name: "estimateTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_inputReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_outputReserve",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eae38038062001eae8339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b611d3880620001766000396000f3fe60806040526004361061007b5760003560e01c8063b43982441161004e578063b439824414610174578063b460af941461019f578063b8c876b1146101dd578063fe4b84df1461021a5761007b565b806303b2cc68146100805780632071a9f4146100bd5780632b7f0923146100fa5780632e2d298414610137575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611515565b61024a565b6040516100b49190611913565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190611564565b610392565b6040516100f19190611913565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190611515565b6103ea565b60405161012e9190611913565b60405180910390f35b34801561014357600080fd5b5061015e60048036038101906101599190611515565b6106d2565b60405161016b9190611913565b60405180910390f35b34801561018057600080fd5b50610189610a56565b6040516101969190611913565b60405180910390f35b3480156101ab57600080fd5b506101c660048036038101906101c19190611515565b610a5c565b6040516101d492919061192e565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff9190611471565b610dd8565b6040516102119190611913565b60405180910390f35b610234600480360381019061022f91906114c3565b610df0565b6040516102419190611913565b60405180910390f35b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610290919061172f565b60206040518083038186803b1580156102a857600080fd5b505afa1580156102bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e091906114ec565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161031d919061172f565b60206040518083038186803b15801561033557600080fd5b505afa158015610349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036d91906114ec565b905061038588898361037f9190611a49565b84610392565b9450505050509392505050565b6000806103e5856103a391906119ef565b9050600083826103b391906119ef565b90506000826103e8876103c691906119ef565b6103d09190611968565b905080826103de91906119be565b93505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610430919061172f565b60206040518083038186803b15801561044857600080fd5b505afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048091906114ec565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104bd919061172f565b60206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906114ec565b90506000610527898a846105219190611a49565b85610392565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105649291906117aa565b602060405180830381600087803b15801561057e57600080fd5b505af1158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b6919061149a565b6105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec906117f3565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b815260040161063293929190611773565b602060405180830381600087803b15801561064c57600080fd5b505af1158015610660573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610684919061149a565b6106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906118f3565b60405180910390fd5b80955050505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610718919061172f565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076891906114ec565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a5919061172f565b60206040518083038186803b1580156107bd57600080fd5b505afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f591906114ec565b90506000600183838b61080891906119ef565b61081291906119be565b61081c9190611968565b90506000836002548b61082f91906119ef565b61083991906119be565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088a9190611968565b9250508190555080600260008282546108a39190611968565b925050819055508573ffffffffffffffffffffffffffffffffffffffff166323b872dd33308d6040518463ffffffff1660e01b81526004016108e793929190611773565b602060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061149a565b610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f90611873565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109b593929190611773565b602060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a07919061149a565b610a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3d90611853565b60405180910390fd5b8096505050505050509392505050565b60025481565b6000806000849050600084905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aa4919061172f565b60206040518083038186803b158015610abc57600080fd5b505afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af491906114ec565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b31919061172f565b60206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8191906114ec565b90506000600254838b610b9491906119ef565b610b9e91906119be565b90506000600254838c610bb191906119ef565b610bbb91906119be565b90508a600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0c9190611a49565b925050819055508a60026000828254610c259190611a49565b925050819055508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c679291906117aa565b602060405180830381600087803b158015610c8157600080fd5b505af1158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb9919061149a565b610cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cef90611873565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d339291906117aa565b602060405180830381600087803b158015610d4d57600080fd5b505af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d85919061149a565b610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90611853565b60405180910390fd5b818197509750505050505050935093915050565b60036020528060005260406000206000915090505481565b60008060025414610e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2d90611813565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610e90919061172f565b60206040518083038186803b158015610ea857600080fd5b505afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee091906114ec565b1015610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1890611833565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f7b919061172f565b60206040518083038186803b158015610f9357600080fd5b505afa158015610fa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcb91906114ec565b101561100c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100390611893565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161106892919061174a565b60206040518083038186803b15801561108057600080fd5b505afa158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b891906114ec565b10156110f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f0906117d3565b60405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161115792919061174a565b60206040518083038186803b15801561116f57600080fd5b505afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a791906114ec565b10156111e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111df906118d3565b60405180910390fd5b81600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161129293929190611773565b602060405180830381600087803b1580156112ac57600080fd5b505af11580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e4919061149a565b611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a906118b3565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161138293929190611773565b602060405180830381600087803b15801561139c57600080fd5b505af11580156113b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d4919061149a565b611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a906118b3565b60405180910390fd5b6002549050919050565b60008135905061142c81611cbd565b92915050565b60008151905061144181611cd4565b92915050565b60008135905061145681611ceb565b92915050565b60008151905061146b81611ceb565b92915050565b60006020828403121561148357600080fd5b60006114918482850161141d565b91505092915050565b6000602082840312156114ac57600080fd5b60006114ba84828501611432565b91505092915050565b6000602082840312156114d557600080fd5b60006114e384828501611447565b91505092915050565b6000602082840312156114fe57600080fd5b600061150c8482850161145c565b91505092915050565b60008060006060848603121561152a57600080fd5b600061153886828701611447565b93505060206115498682870161141d565b925050604061155a8682870161141d565b9150509250925092565b60008060006060848603121561157957600080fd5b600061158786828701611447565b935050602061159886828701611447565b92505060406115a986828701611447565b9150509250925092565b6115bc81611a7d565b82525050565b60006115cf601883611957565b91506115da82611b23565b602082019050919050565b60006115f2601c83611957565b91506115fd82611b4c565b602082019050919050565b6000611615601883611957565b915061162082611b75565b602082019050919050565b6000611638601d83611957565b915061164382611b9e565b602082019050919050565b600061165b601483611957565b915061166682611bc7565b602082019050919050565b600061167e601983611957565b915061168982611bf0565b602082019050919050565b60006116a1602083611957565b91506116ac82611c19565b602082019050919050565b60006116c4601983611957565b91506116cf82611c42565b602082019050919050565b60006116e7601b83611957565b91506116f282611c6b565b602082019050919050565b600061170a601c83611957565b915061171582611c94565b602082019050919050565b61172981611abb565b82525050565b600060208201905061174460008301846115b3565b92915050565b600060408201905061175f60008301856115b3565b61176c60208301846115b3565b9392505050565b600060608201905061178860008301866115b3565b61179560208301856115b3565b6117a26040830184611720565b949350505050565b60006040820190506117bf60008301856115b3565b6117cc6020830184611720565b9392505050565b600060208201905081810360008301526117ec816115c2565b9050919050565b6000602082019050818103600083015261180c816115e5565b9050919050565b6000602082019050818103600083015261182c81611608565b9050919050565b6000602082019050818103600083015261184c8161162b565b9050919050565b6000602082019050818103600083015261186c8161164e565b9050919050565b6000602082019050818103600083015261188c81611671565b9050919050565b600060208201905081810360008301526118ac81611694565b9050919050565b600060208201905081810360008301526118cc816116b7565b9050919050565b600060208201905081810360008301526118ec816116da565b9050919050565b6000602082019050818103600083015261190c816116fd565b9050919050565b60006020820190506119286000830184611720565b92915050565b60006040820190506119436000830185611720565b6119506020830184611720565b9392505050565b600082825260208201905092915050565b600061197382611abb565b915061197e83611abb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119b3576119b2611ac5565b5b828201905092915050565b60006119c982611abb565b91506119d483611abb565b9250826119e4576119e3611af4565b5b828204905092915050565b60006119fa82611abb565b9150611a0583611abb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a3e57611a3d611ac5565b5b828202905092915050565b6000611a5482611abb565b9150611a5f83611abb565b925082821015611a7257611a71611ac5565b5b828203905092915050565b6000611a8882611a9b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f546f6b656e207472616e73666572204572726f72000000000000000000000000600082015250565b7f4261736520746f6b656e207472616e73666572204572726f7200000000000000600082015250565b7f556e69546f6b656e2062616c616e6365206e6f742073756666696369656e742e600082015250565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b7f556e69546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000600082015250565b7f4572726f72207472616e66657272696e672074686520746f6b656e2e00000000600082015250565b611cc681611a7d565b8114611cd157600080fd5b50565b611cdd81611a8f565b8114611ce857600080fd5b50565b611cf481611abb565b8114611cff57600080fd5b5056fea26469706673582212203b5d387fbda0d54eb39bec14eb02541207e5d78b3c321f1dc5a0a01ae0ded64864736f6c63430008040033";

export class DEX__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _uniToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DEX> {
    return super.deploy(_token, _uniToken, overrides || {}) as Promise<DEX>;
  }
  getDeployTransaction(
    _token: string,
    _uniToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _uniToken, overrides || {});
  }
  attach(address: string): DEX {
    return super.attach(address) as DEX;
  }
  connect(signer: Signer): DEX__factory {
    return super.connect(signer) as DEX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DEXInterface {
    return new utils.Interface(_abi) as DEXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DEX {
    return new Contract(address, _abi, signerOrProvider) as DEX;
  }
}
