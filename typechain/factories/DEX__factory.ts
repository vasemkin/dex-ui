/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DEX, DEXInterface } from "../DEX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "estimateDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
    ],
    name: "estimateTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fromReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toReserve",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200221f3803806200221f8339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b6120a980620001766000396000f3fe6080604052600436106100865760003560e01c80639058694911610059578063905869491461017f578063b4398244146101bc578063b460af94146101e7578063b8c876b114610225578063fe4b84df1461026257610086565b806303b2cc681461008b5780632071a9f4146100c85780632b7f0923146101055780632e2d298414610142575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906117ce565b610292565b6040516100bf9190611c35565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea919061181d565b61044d565b6040516100fc9190611c35565b60405180910390f35b34801561011157600080fd5b5061012c600480360381019061012791906117ce565b610494565b6040516101399190611c35565b60405180910390f35b34801561014e57600080fd5b50610169600480360381019061016491906117ce565b610771565b6040516101769190611c35565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906117ce565b610af5565b6040516101b39190611c35565b60405180910390f35b3480156101c857600080fd5b506101d1610c4a565b6040516101de9190611c35565b60405180910390f35b3480156101f357600080fd5b5061020e600480360381019061020991906117ce565b610c50565b60405161021c929190611c50565b60405180910390f35b34801561023157600080fd5b5061024c6004803603810190610247919061172a565b610fcc565b6040516102599190611c35565b60405180910390f35b61027c6004803603810190610277919061177c565b610fe4565b6040516102899190611c35565b60405180910390f35b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102d89190611a21565b60206040518083038186803b1580156102f057600080fd5b505afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032891906117a5565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103659190611a21565b60206040518083038186803b15801561037d57600080fd5b505afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b591906117a5565b90506103f66040518060400160405280600b81526020017f66726f6d5265736572766500000000000000000000000000000000000000000081525083611611565b6104356040518060400160405280600981526020017f746f52657365727665000000000000000000000000000000000000000000000081525082611611565b61044088838361044d565b9450505050509392505050565b6000806103e5858461045f9190611d1c565b6104699190611d1c565b905060006103e88561047b9190611d1c565b905080826104899190611ceb565b925050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104da9190611a21565b60206040518083038186803b1580156104f257600080fd5b505afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a91906117a5565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105679190611a21565b60206040518083038186803b15801561057f57600080fd5b505afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906117a5565b905060006105c689848461044d565b90508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610603929190611a9c565b602060405180830381600087803b15801561061d57600080fd5b505af1158015610631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190611753565b610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b90611b15565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b81526004016106d193929190611a65565b602060405180830381600087803b1580156106eb57600080fd5b505af11580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190611753565b610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990611c15565b60405180910390fd5b80955050505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107b79190611a21565b60206040518083038186803b1580156107cf57600080fd5b505afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080791906117a5565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108449190611a21565b60206040518083038186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089491906117a5565b90506000600183838b6108a79190611d1c565b6108b19190611ceb565b6108bb9190611c95565b90506000836002548b6108ce9190611d1c565b6108d89190611ceb565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109299190611c95565b9250508190555080600260008282546109429190611c95565b925050819055508573ffffffffffffffffffffffffffffffffffffffff166323b872dd33308d6040518463ffffffff1660e01b815260040161098693929190611a65565b602060405180830381600087803b1580156109a057600080fd5b505af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190611753565b610a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0e90611b95565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a5493929190611a65565b602060405180830381600087803b158015610a6e57600080fd5b505af1158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa69190611753565b610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611b75565b60405180910390fd5b8096505050505050509392505050565b600080839050600083905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b3b9190611a21565b60206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b91906117a5565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bc89190611a21565b60206040518083038186803b158015610be057600080fd5b505afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1891906117a5565b9050600182828a610c299190611d1c565b610c339190611ceb565b610c3d9190611c95565b9450505050509392505050565b60025481565b6000806000849050600084905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c989190611a21565b60206040518083038186803b158015610cb057600080fd5b505afa158015610cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce891906117a5565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d259190611a21565b60206040518083038186803b158015610d3d57600080fd5b505afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7591906117a5565b90506000600254838b610d889190611d1c565b610d929190611ceb565b90506000600254838c610da59190611d1c565b610daf9190611ceb565b90508a600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e009190611d76565b925050819055508a60026000828254610e199190611d76565b925050819055508573ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610e5b929190611a9c565b602060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190611753565b610eec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee390611b95565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f27929190611a9c565b602060405180830381600087803b158015610f4157600080fd5b505af1158015610f55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f799190611753565b610fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faf90611b75565b60405180910390fd5b818197509750505050505050935093915050565b60036020528060005260406000206000915090505481565b6000806002541461102a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102190611b35565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016110849190611a21565b60206040518083038186803b15801561109c57600080fd5b505afa1580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d491906117a5565b1015611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90611b55565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161116f9190611a21565b60206040518083038186803b15801561118757600080fd5b505afa15801561119b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bf91906117a5565b1015611200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f790611bb5565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161125c929190611a3c565b60206040518083038186803b15801561127457600080fd5b505afa158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac91906117a5565b10156112ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e490611af5565b60405180910390fd5b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161134b929190611a3c565b60206040518083038186803b15801561136357600080fd5b505afa158015611377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139b91906117a5565b10156113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d390611bf5565b60405180910390fd5b81600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161148693929190611a65565b602060405180830381600087803b1580156114a057600080fd5b505af11580156114b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d89190611753565b611517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150e90611bd5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161157693929190611a65565b602060405180830381600087803b15801561159057600080fd5b505af11580156115a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c89190611753565b611607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fe90611bd5565b60405180910390fd5b6002549050919050565b6116a98282604051602401611627929190611ac5565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116ad565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000813590506116e58161202e565b92915050565b6000815190506116fa81612045565b92915050565b60008135905061170f8161205c565b92915050565b6000815190506117248161205c565b92915050565b60006020828403121561173c57600080fd5b600061174a848285016116d6565b91505092915050565b60006020828403121561176557600080fd5b6000611773848285016116eb565b91505092915050565b60006020828403121561178e57600080fd5b600061179c84828501611700565b91505092915050565b6000602082840312156117b757600080fd5b60006117c584828501611715565b91505092915050565b6000806000606084860312156117e357600080fd5b60006117f186828701611700565b9350506020611802868287016116d6565b9250506040611813868287016116d6565b9150509250925092565b60008060006060848603121561183257600080fd5b600061184086828701611700565b935050602061185186828701611700565b925050604061186286828701611700565b9150509250925092565b61187581611daa565b82525050565b600061188682611c79565b6118908185611c84565b93506118a0818560208601611df2565b6118a981611e83565b840191505092915050565b60006118c1601883611c84565b91506118cc82611e94565b602082019050919050565b60006118e4601c83611c84565b91506118ef82611ebd565b602082019050919050565b6000611907601883611c84565b915061191282611ee6565b602082019050919050565b600061192a601d83611c84565b915061193582611f0f565b602082019050919050565b600061194d601483611c84565b915061195882611f38565b602082019050919050565b6000611970601983611c84565b915061197b82611f61565b602082019050919050565b6000611993602083611c84565b915061199e82611f8a565b602082019050919050565b60006119b6601983611c84565b91506119c182611fb3565b602082019050919050565b60006119d9601b83611c84565b91506119e482611fdc565b602082019050919050565b60006119fc601c83611c84565b9150611a0782612005565b602082019050919050565b611a1b81611de8565b82525050565b6000602082019050611a36600083018461186c565b92915050565b6000604082019050611a51600083018561186c565b611a5e602083018461186c565b9392505050565b6000606082019050611a7a600083018661186c565b611a87602083018561186c565b611a946040830184611a12565b949350505050565b6000604082019050611ab1600083018561186c565b611abe6020830184611a12565b9392505050565b60006040820190508181036000830152611adf818561187b565b9050611aee6020830184611a12565b9392505050565b60006020820190508181036000830152611b0e816118b4565b9050919050565b60006020820190508181036000830152611b2e816118d7565b9050919050565b60006020820190508181036000830152611b4e816118fa565b9050919050565b60006020820190508181036000830152611b6e8161191d565b9050919050565b60006020820190508181036000830152611b8e81611940565b9050919050565b60006020820190508181036000830152611bae81611963565b9050919050565b60006020820190508181036000830152611bce81611986565b9050919050565b60006020820190508181036000830152611bee816119a9565b9050919050565b60006020820190508181036000830152611c0e816119cc565b9050919050565b60006020820190508181036000830152611c2e816119ef565b9050919050565b6000602082019050611c4a6000830184611a12565b92915050565b6000604082019050611c656000830185611a12565b611c726020830184611a12565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000611ca082611de8565b9150611cab83611de8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ce057611cdf611e25565b5b828201905092915050565b6000611cf682611de8565b9150611d0183611de8565b925082611d1157611d10611e54565b5b828204905092915050565b6000611d2782611de8565b9150611d3283611de8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d6b57611d6a611e25565b5b828202905092915050565b6000611d8182611de8565b9150611d8c83611de8565b925082821015611d9f57611d9e611e25565b5b828203905092915050565b6000611db582611dc8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611e10578082015181840152602081019050611df5565b83811115611e1f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000000000600082015250565b7f4572726f72207472616e7366657272696e672074686520746f6b656e00000000600082015250565b7f44455820616c726561647920696e697469616c697a65642e0000000000000000600082015250565b7f546f6b656e2062616c616e6365206e6f742073756666696369656e742e000000600082015250565b7f546f6b656e207472616e73666572204572726f72000000000000000000000000600082015250565b7f4261736520746f6b656e207472616e73666572204572726f7200000000000000600082015250565b7f556e69546f6b656e2062616c616e6365206e6f742073756666696369656e742e600082015250565b7f4572726f72207472616e7366657272696e6720746f6b656e7300000000000000600082015250565b7f556e69546f6b656e20616c6c6f77616e636520746f6f206c6f772e0000000000600082015250565b7f4572726f72207472616e66657272696e672074686520746f6b656e2e00000000600082015250565b61203781611daa565b811461204257600080fd5b50565b61204e81611dbc565b811461205957600080fd5b50565b61206581611de8565b811461207057600080fd5b5056fea264697066735822122041a7e75287c0f6b2a150a03161feb249ecc10e400b1b5a275643a6c22c95c7b764736f6c63430008040033";

export class DEX__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _uniToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DEX> {
    return super.deploy(_token, _uniToken, overrides || {}) as Promise<DEX>;
  }
  getDeployTransaction(
    _token: string,
    _uniToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _uniToken, overrides || {});
  }
  attach(address: string): DEX {
    return super.attach(address) as DEX;
  }
  connect(signer: Signer): DEX__factory {
    return super.connect(signer) as DEX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DEXInterface {
    return new utils.Interface(_abi) as DEXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DEX {
    return new Contract(address, _abi, signerOrProvider) as DEX;
  }
}
